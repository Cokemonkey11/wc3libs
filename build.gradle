buildscript {
    ext.kotlin_version = '1.2.21'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "idea"
    id "jacoco"
}
apply plugin: 'antlr'
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

group 'net.moonlightflower'
version '1.0.2'

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    antlr "org.antlr:antlr4:4.7"

    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'
    compile 'com.github.inwc3:JMPQ3:1.6.3'
    //compile 'com.github.inwc3:JMPQ3'
    compile group: 'com.esotericsoftware.minlog', name: 'minlog', version: '1.2'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //compile 'com.github.mnk:xz-java:771cc59'
    //compile 'org.tukaani:xz-java:771cc59'
    //compile group: 'org.tukaani', name: 'xz', version: '1.8'
    //compile group: 'org.apache.commons', name: 'commons-compress', version: '1.14'
    compile group: 'com.dorkbox', name: 'PeParser', version: '2.12'

    testCompile 'org.testng:testng:6.1.1'
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.compile.collect { zipTree(it) } }
}
dist.dependsOn classes

dist.archiveName = "${jar.baseName}.${jar.extension}"

test {
    useTestNG()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourcesJar
}

task cleanAntlrDir {
    delete fileTree("src/main/java/net/moonlightflower/wc3libs/antlr")
}

generateGrammarSource << {
    println "Copying generated grammar lexer/parser files to main directory."

    //outputDirectory = new File("${project.buildDir}/generated-src/main/java/net/moonlightflower/wc3libs/antlr")
    //outputDirectory = new File("${project.projectDir}/src/main/java/net/moonlightflower/wc3libs/antlr")

    /*copy {
        from "${project.buildDir}/generated-src/main/java/net/moonlightflower/wc3libs/antlr"
        into "src/main/java/net/moonlightflower/wc3libs/antlr"
    }*/

    copy {
        from "${buildDir}/generated-src/antlr/main"
        into "src/main/java/net/moonlightflower/wc3libs/antlr"
    }
    project.delete fileTree("${buildDir}/generated-src/antlr/main").include('*.*')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10' //we want gradle 2.10 to run this project
}

generateGrammarSource.dependsOn clean
//generateGrammarSource.dependsOn cleanAntlrDir
compileJava.dependsOn generateGrammarSource

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

